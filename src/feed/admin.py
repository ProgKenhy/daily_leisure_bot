from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from sqlalchemy.ext.asyncio import AsyncSession
from datetime import time

from feed.models import Place, PlaceCategory, WeekDay

admin_router = Router()


# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è FSM
class AddPlaceStates(StatesGroup):
    waiting_for_name = State()
    waiting_for_description = State()
    waiting_for_category = State()
    waiting_for_address = State()
    waiting_for_lat = State()
    waiting_for_lon = State()
    waiting_for_opening_time = State()
    waiting_for_closing_time = State()
    waiting_for_working_days = State()
    waiting_for_image_url = State()
    waiting_for_phone = State()
    waiting_for_website = State()
    waiting_for_rating = State()
    waiting_for_price_level = State()


# –û–±—â–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø—Ä–æ–ø—É—Å–∫–æ–º
skip_keyboard = ReplyKeyboardMarkup(
    keyboard=[[KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]],
    resize_keyboard=True,
    one_time_keyboard=True
)


# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω–∫—É
@admin_router.message(Command("admin"))
async def cmd_admin(message: Message):
    if message.from_user.id != 2084948859:
        await message.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
        return

    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ")],
            [KeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞")]
        ],
        resize_keyboard=True
    )

    await message.answer("üëë –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", reply_markup=keyboard)


# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ—Å—Ç–∞
@admin_router.message(F.text == "‚ûï –î–æ–±–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ")
async def start_add_place(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    await message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞:",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.set_state(AddPlaceStates.waiting_for_name)


@admin_router.message(AddPlaceStates.waiting_for_name)
async def process_name(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞:", reply_markup=skip_keyboard)
    await state.set_state(AddPlaceStates.waiting_for_description)


@admin_router.message(AddPlaceStates.waiting_for_description)
async def process_description(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text != "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(description=message.text)

    # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
    categories = list(PlaceCategory)
    categories_kb = ReplyKeyboardMarkup(
        keyboard=[
                     [KeyboardButton(text=cat.name) for cat in categories[i:i + 2]]
                     for i in range(0, len(categories), 2)
                 ] + [[KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]],
        resize_keyboard=True
    )

    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=categories_kb)
    await state.set_state(AddPlaceStates.waiting_for_category)


@admin_router.message(AddPlaceStates.waiting_for_category)
async def process_category(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text != "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—ã–±—Ä–∞–Ω–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ enum
        valid_categories = [cat.name for cat in PlaceCategory]
        if message.text not in valid_categories:
            await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è! –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑ —Å–ø–∏—Å–∫–∞:")
            return
        await state.update_data(category=message.text)

    await message.answer("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –º–µ—Å—Ç–∞:", reply_markup=skip_keyboard)
    await state.set_state(AddPlaceStates.waiting_for_address)


@admin_router.message(AddPlaceStates.waiting_for_address)
async def process_address(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text != "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(address=message.text)

    await message.answer("–í–≤–µ–¥–∏—Ç–µ —à–∏—Ä–æ—Ç—É (latitude):", reply_markup=ReplyKeyboardRemove())
    await state.set_state(AddPlaceStates.waiting_for_lat)


@admin_router.message(AddPlaceStates.waiting_for_lat)
async def process_lat(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    try:
        lat = float(message.text)
        await state.update_data(loc_lat=lat)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–≥–æ—Ç—É (longitude):")
        await state.set_state(AddPlaceStates.waiting_for_lon)
    except ValueError:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")


@admin_router.message(AddPlaceStates.waiting_for_lon)
async def process_lon(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    try:
        lon = float(message.text)
        await state.update_data(loc_lon=lon)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –æ—Ç–∫—Ä—ã—Ç–∏—è (—Ñ–æ—Ä–º–∞—Ç HH:MM):", reply_markup=skip_keyboard)
        await state.set_state(AddPlaceStates.waiting_for_opening_time)
    except ValueError:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")


@admin_router.message(AddPlaceStates.waiting_for_opening_time)
async def process_opening_time(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text == "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(opening_time=None)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–∫—Ä—ã—Ç–∏—è (—Ñ–æ—Ä–º–∞—Ç HH:MM):", reply_markup=skip_keyboard)
        await state.set_state(AddPlaceStates.waiting_for_closing_time)
        return

    try:
        hours, minutes = map(int, message.text.split(':'))
        opening_time = time(hours, minutes)
        await state.update_data(opening_time=opening_time)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –∑–∞–∫—Ä—ã—Ç–∏—è (—Ñ–æ—Ä–º–∞—Ç HH:MM):", reply_markup=skip_keyboard)
        await state.set_state(AddPlaceStates.waiting_for_closing_time)
    except:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏!")


@admin_router.message(AddPlaceStates.waiting_for_closing_time)
async def process_closing_time(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text == "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(closing_time=None)
        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–Ω—è–º–∏ –Ω–µ–¥–µ–ª–∏
        days_kb = ReplyKeyboardMarkup(
            keyboard=[
                         [KeyboardButton(text=day.name) for day in list(WeekDay)[i:i + 3]]
                         for i in range(0, len(WeekDay), 3)
                     ] + [[KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]],
            resize_keyboard=True
        )
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–Ω–∏ —Ä–∞–±–æ—Ç—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):", reply_markup=days_kb)
        await state.set_state(AddPlaceStates.waiting_for_working_days)
        return

    try:
        hours, minutes = map(int, message.text.split(':'))
        closing_time = time(hours, minutes)
        await state.update_data(closing_time=closing_time)

        # –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–Ω—è–º–∏ –Ω–µ–¥–µ–ª–∏
        days_kb = ReplyKeyboardMarkup(
            keyboard=[
                         [KeyboardButton(text=day.name) for day in list(WeekDay)[i:i + 3]]
                         for i in range(0, len(WeekDay), 3)
                     ] + [[KeyboardButton(text="‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")]],
            resize_keyboard=True
        )

        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –¥–Ω–∏ —Ä–∞–±–æ—Ç—ã (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):", reply_markup=days_kb)
        await state.set_state(AddPlaceStates.waiting_for_working_days)
    except:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏!")


@admin_router.message(AddPlaceStates.waiting_for_working_days)
async def process_working_days(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text == "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(working_days=[])
        await message.answer("–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", reply_markup=skip_keyboard)
        await state.set_state(AddPlaceStates.waiting_for_image_url)
        return

    selected_days = [day.strip() for day in message.text.split(',')]
    valid_days = [day.name for day in WeekDay]

    if all(day in valid_days for day in selected_days):
        await state.update_data(working_days=selected_days)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", reply_markup=skip_keyboard)
        await state.set_state(AddPlaceStates.waiting_for_image_url)
    else:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏!")


@admin_router.message(AddPlaceStates.waiting_for_image_url)
async def process_image_url(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text != "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(image_url=message.text)

    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω:", reply_markup=skip_keyboard)
    await state.set_state(AddPlaceStates.waiting_for_phone)


@admin_router.message(AddPlaceStates.waiting_for_phone)
async def process_phone(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text != "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(phone=message.text)

    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Å–∞–π—Ç:", reply_markup=skip_keyboard)
    await state.set_state(AddPlaceStates.waiting_for_website)


@admin_router.message(AddPlaceStates.waiting_for_website)
async def process_website(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text != "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(website=message.text)

    await message.answer("–í–≤–µ–¥–∏—Ç–µ —Ä–µ–π—Ç–∏–Ω–≥ (0-5):", reply_markup=skip_keyboard)
    await state.set_state(AddPlaceStates.waiting_for_rating)


@admin_router.message(AddPlaceStates.waiting_for_rating)
async def process_rating(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    if message.text == "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        await state.update_data(rating=None)
        await message.answer("–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Ü–µ–Ω (1-3):", reply_markup=skip_keyboard)
        await state.set_state(AddPlaceStates.waiting_for_price_level)
        return

    try:
        rating = float(message.text)
        if 0 <= rating <= 5:
            await state.update_data(rating=rating)
            await message.answer("–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å —Ü–µ–Ω (1-3):", reply_markup=skip_keyboard)
            await state.set_state(AddPlaceStates.waiting_for_price_level)
        else:
            await message.answer("‚ùå –†–µ–π—Ç–∏–Ω–≥ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç 0 –¥–æ 5!")
    except ValueError:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!")


@admin_router.message(AddPlaceStates.waiting_for_price_level)
async def process_price_level(message: Message, state: FSMContext, session: AsyncSession):
    if message.from_user.id != 2084948859:
        return

    data = await state.get_data()

    if message.text != "‚è≠Ô∏è –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å":
        try:
            price_level = int(message.text)
            if 1 <= price_level <= 3:
                data['price_level'] = price_level
        except ValueError:
            await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 3!")
            return

    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ
    new_place = Place(
        name=data['name'],
        description=data.get('description'),
        category=data.get('category'),
        address=data.get('address'),
        loc_lat=data['loc_lat'],
        loc_lon=data['loc_lon'],
        opening_time=data.get('opening_time'),
        closing_time=data.get('closing_time'),
        working_days=data.get('working_days', []),
        image_url=data.get('image_url'),
        phone=data.get('phone'),
        website=data.get('website'),
        rating=data.get('rating'),
        price_level=data.get('price_level')
    )

    session.add(new_place)
    await session.commit()

    await message.answer("‚úÖ –ú–µ—Å—Ç–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!", reply_markup=ReplyKeyboardRemove())
    await state.clear()


# –û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏
@admin_router.message(Command("cancel"))
@admin_router.message(F.text == "‚ùå –û—Ç–º–µ–Ω–∞")
async def cancel_operation(message: Message, state: FSMContext):
    if message.from_user.id != 2084948859:
        return

    await state.clear()
    await message.answer("–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞", reply_markup=ReplyKeyboardRemove())